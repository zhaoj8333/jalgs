package ds.tree;

/*
    哈弗曼编码： 现代压缩算法的基础

    哈夫曼树： 最优二叉树
        1. 先计算每个字母出现的频率（权值，可以直接使用次数）
        2. 以权值作为根节点构建n棵二叉树，组成森林
        3. 在森林中选出2个根节点最小的树合并，作为一棵新树的左右子树，且新树的根节点为其左右子树根节点之和
        4. 从森林中删除所选取的2棵树，并将新树加入森林
        5. 重复3，4步骤，直到森林只剩下一棵树为止，该树即为哈夫曼树
 */
@SuppressWarnings("all")
public class HuffmanTree {
}
