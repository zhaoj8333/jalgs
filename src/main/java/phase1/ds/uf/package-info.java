/*
    n个村庄，有些村庄之间没有连接的路，有些之间有

    要求设计一个数据结构，能够快速执行以下操作：
        查询2个村庄之间是否有连接的路
        连接2个村庄

    幷查集：能够办到查询，连接的均摊时间成本都是O(a(n)), a(n) < 5

    幷查集非常适合解决这类　“连接” 相关的问题

    幷查集　Union Find
        幷查集又叫不相交集合(Disjoint Set)

    两个核心：
        查找（Find）：查找元素所在的集合，此集合不是指set，而是广义上的数据集合
        合并(Union)： 将两个元素所在的集合合并为一个集合

    实现思路：
        Quick Find:
            查找find的复杂度为 O(1)
            合并复杂度为 O(N)
        Quick Union:
            查找find复杂度为O(logn)，可以优化至O(a(n))
            合并(Union)复杂度O(logn),可以优化至O(a(n))

    幷查集是可以用数组实现的树形结构，二叉堆，优先级队列也是可以用数组实现的树形数据结构

 */